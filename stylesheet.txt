
selector declaration
大小写不敏感
多个selector用commas(,)分开

The declaration part of a style rule is a list of property: value pairs, enclosed in braces ({}) and separated with semicolons. For example:
QPushButton { color: red; background-color: white }

继承qwidget要设置background-image时
QStyleOption opt;
opt.init(this);QPainter p(this);style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this); QWidget::paintEvent(e);
border: lenght style color radius, 其它的只要lenght

Pseudo-States
hover, pressed, checked, enabled, selected
QPushButton:hover { color: white }
QRadioButton:!hover { color: red }
QCheckBox:hover:checked { color: white }
QCheckBox:hover, QCheckBox:checked { color: white }


Conflict Resolution
1.同一个class范围小优先级高;
QPushButton#okButton { color: gray }   //hight
 QPushButton { color: red }
2.对于同级的状态,要连一起
QPushButton:hover:enabled { color: white }
QPushButton:enabled { color: red }

3.对于类继承关系, 基类是最高级别的
QPushButton { color: red }
QAbstractButton { color: gray } (hight)


针对每个类基本的设置

--------------------------------------------------------------------------------------
QPushButton:
		"QPushButton{padding:1px 5px 1px 5px; background: white;border: 1px outset;}"
		"QPushButton:hover{background-color: rgb(200,200,200); color: blue }"
		"QPushButton:hover:pressed{background-color: gray;}"
		"QPushButton::menu-indicator{background: gray; subcontrol-origin: padding;subcontrol-position: bottom right; right:1; bottom:1}"
--------------------------------------------------------------------------------------	

QRadioButton:
		"QRadioButton:{spacing: 3px;}"
		"QRadioButton::indicator{width:13; height:13;}"
		"QRadioButton::indicator::unchecked{background:gray;}"
		"QRadioButton::indicator::unchecked:hover{background:black;}"
		"QRadioButton::indicator::unchecked:pressed{background:blue;}"
		"QRadioButton::indicator::checked{background:red;}"
		"QRadioButton::indicator::checked:hover{background:rgb(250,100,100);}"
		"QRadioButton::indicator::checked:pressed{background:rgb(250,50,50);}"
	
--------------------------------------------------------------------------------------	
QCheckBox: (和QRadioButtong一样, 多了个不确定状态)
		QChekcBox::indicator:indeterminate:hover{border-image: url()}
		QCheckBox::indicator:indeterminate:pressed{border-image: url()}

--------------------------------------------------------------------------------------
QMenu:
		"QMenu{background-color: white; border: 1px solid gray; color:gray;}"
		"QMenu:item{color:black;padding:1px 0px 1px 20px; height: 30; width: 300;}"
		"QMenu::item:selected {background-color: rgb(78,166,234)}"
		"QMenu::indicator{width: 13px; height: 13px; left: 2px;}"   //need setCheckable(true)
		"QMenu::indicator:unchecked{border-image: url(:/QtFirst/Resources/423.png);}"
		"QMenu::indicator:checked{border-image: url(:/QtFirst/Resources/1.png);}"
		"QMenu::right-arrow{background: red; }"
		"QMenu::icon {left: 2}" // 不能和indicator共存
		
--------------------------------------------------------------------------------------
QComboBox:
 QComboBox {
     border: 1px solid gray;
     border-radius: 3px;
     padding: 1px 18px 1px 3px;
     min-width: 72px;
 }

 QComboBox:editable {
     background: white;
 }

 QComboBox, QComboBox::drop-down{
      background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                  stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                  stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
 }

 QComboBox::drop-down {
     subcontrol-origin: padding;
     subcontrol-position: top right;
     width: 15px;
     border-left-width: 1px;
     border-left-color: darkgray;
     border-left-style: solid; /* just a single line */
     border-top-right-radius: 3px; /* same radius as the QComboBox */
     border-bottom-right-radius: 3px;
 }
 
 QComboBox:open { /* shift the text when the popup opens */
     padding-top: 3px;
     padding-left: 4px;
 }

 QComboBox::down-arrow {
     image: url(/usr/share/icons/crystalsvg/16x16/actions/1downarrow.png);
 }

 QComboBox::down-arrow:open { /* shift the arrow when popup is open */
     top: 1px;
     left: 1px;
 }
 
 QComboBox{border: 1px solid gray; background: rgb(230,230,230);padding:0px}
QComboBox::drop-down{width:0px;}
QComboBox QAbstractItemView::item{padding: 5px 0px;}

 --------------------------------------------------------------------------------------
 QLineEdit:
 selection-color:
 selection-background-color:
 
  --------------------------------------------------------------------------------------
 QSpinBox:
   QSpinBox {
     padding-right: 15px; /* make room for the arrows */
     border-image: url(:/images/frame.png) 4;
     border-width: 3;
 }

 QSpinBox::up-button {
     subcontrol-origin: border;
     subcontrol-position: top right; /* position at the top right corner */

     width: 16px; /* 16 + 2*1px border-width = 15px padding + 3px parent border */
     border-image: url(:/images/spinup.png) 1;
     border-width: 1px;
 }

 QSpinBox::up-button:hover {
     border-image: url(:/images/spinup_hover.png) 1;
 }

 QSpinBox::up-button:pressed {
     border-image: url(:/images/spinup_pressed.png) 1;
 }

 QSpinBox::up-arrow {
     image: url(:/images/up_arrow.png);
     width: 7px;
     height: 7px;
 }

 QSpinBox::up-arrow:disabled, QSpinBox::up-arrow:off { /* off state when value is max */
    image: url(:/images/up_arrow_disabled.png);
 }

 QSpinBox::down-button {
     subcontrol-origin: border;
     subcontrol-position: bottom right; /* position at bottom right corner */

     width: 16px;
     border-image: url(:/images/spindown.png) 1;
     border-width: 1px;
     border-top-width: 0;
 }

 QSpinBox::down-button:hover {
     border-image: url(:/images/spindown_hover.png) 1;
 }

 QSpinBox::down-button:pressed {
     border-image: url(:/images/spindown_pressed.png) 1;
 }

 QSpinBox::down-arrow {
     image: url(:/images/down_arrow.png);
     width: 7px;
     height: 7px;
 }

 QSpinBox::down-arrow:disabled,
 QSpinBox::down-arrow:off { /* off state when value in min */
    image: url(:/images/down_arrow_disabled.png);
 }
 
 --------------------------------------------------------------------------------------
 
QProgressBar:
 
QProgressBar{border: 1px solid gray; background: white; text-align: center;}
QProgressBar::chunk{background: rgb(180,180, 250); width:10px; margin: 1px;}

 --------------------------------------------------------------------------------------
QGroupBox:
QGroupBox {
     background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                       stop: 0 #E0E0E0, stop: 1 #FFFFFF);
     border: 2px solid gray;
     border-radius: 5px;
     margin-top: 1ex; /* leave space at the top for the title */
 }

QGroupBox::title {
     subcontrol-origin: margin;
     subcontrol-position: top center; /* position at the top center */
     padding: 0 3px;
     background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                       stop: 0 #FFOECE, stop: 1 #FFFFFF);
 }
 
 // 和QCheckBox一样
  QGroupBox::indicator {
     width: 13px;
     height: 13px;
 }

 QGroupBox::indicator:unchecked {
     image: url(:/images/checkbox_unchecked.png);
 }

 
--------------------------------------------------------------------------------------
QScrollBar:
 QScrollBar:horizontal {
     border: 2px solid grey;
     background: #32CC99;
     height: 15px;
     margin: 0px 20px 0 20px;
 }
 QScrollBar::handle:horizontal {
     background: white;
     min-width: 20px;
 }
 QScrollBar::add-line:horizontal {
     border: 2px solid grey;
     background: #32CC99;
     width: 20px;
     subcontrol-position: right;
     subcontrol-origin: margin;
 }

 QScrollBar::sub-line:horizontal {
     border: 2px solid grey;
     background: #32CC99;
     width: 20px;
     subcontrol-position: left;
     subcontrol-origin: margin;
 }

--------------------------------------------------------------------------------------
QListView {
show-decoration-selected: 2; /* make the selection span the entire width of the view */
border: 1px solid red;
border-radius: 5px;
background: rgb(240,240,240);
color:green;
font: 14px;
padding-left: 5;
 }
QListView::item:selected {
     border: 1px solid #6a6ea9;
 }
 QListView::item{height: 25px;}

 QListView::item:selected {
     background: black;
color:white;
 }
 QListView::item:hover {
     background: gray;
	color: black;
 }



--------------------------------------------------------------------------------------